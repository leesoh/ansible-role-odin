---
- set_fact:
    ansible_distro: "{{ ansible_distribution|lower|replace(' ', '_')|replace('/', '-') }}"

- name: Gather OS-specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
      - "{{ ansible_distro }}-{{ ansible_distribution_version|lower|replace('/', '_') }}.yml"
      - "{{ ansible_distro }}-{{ ansible_distribution_release }}.yml"
      - "{{ ansible_distro }}-{{ ansible_distribution_major_version|lower|replace('/', '_') }}.yml"
      - "{{ ansible_distro }}.yml"
      - "{{ ansible_os_family|lower }}.yml"

- name: Clone ODIN from GitHub
  become: true
  git:
    repo: https://github.com/chrismaddalena/ODIN.git
    dest: "{{ odin_git_location }}/ODIN"
    update: yes
  register: odin

# Currently broken-ish https://github.com/pypa/pipenv/issues/2924
- name: Install Python requirements
  become: true
  become_flags: -E
  when: odin.changed
  shell: pipenv install
  environment:
    PATH: "$HOME/.local/bin:{{ ansible_env.PATH }}"
  args:
    chdir: "{{ odin_git_location }}/ODIN"

- name: Download chromedriver
  when: odin.changed
  get_url:
    url: https://chromedriver.storage.googleapis.com/2.42/chromedriver_linux64.zip
    dest: /tmp

- name: Create chromedriver folder
  become: true
  when: odin.changed
  file:
    path: "{{ odin_git_location }}/chromedriver"
    state: directory

- name: Extract chromedriver
  become: true
  when: odin.changed
  unarchive:
    remote_src: yes
    src: /tmp/chromedriver_linux64.zip
    dest: "{{ odin_git_location }}/chromedriver"

- name: Download urlcrazy
  get_url:
    url: https://www.morningstarsecurity.com/downloads/urlcrazy-0.5.tar.gz
    dest: /tmp

- name: Create urlcrazy folder
  become: true
  when: odin.changed
  file:
    path: "{{ odin_git_location }}/urlcrazy"
    state: directory

- name: Extract urlcrazy
  become: true
  when: odin.changed
  unarchive:
    remote_src: yes
    src: /tmp/urlcrazy-0.5.tar.gz
    dest: "{{ odin_git_location }}/urlcrazy"

- name: Install required packages
  become: true
  when: odin.changed
  package:
    name: "{{ odin_packages }}"
    state: latest

- name: Install ODIN
  when: odin.changed
  become: true
  become_flags: -E
  command: pipenv install
  args:
    chdir: "{{ odin_git_location }}/ODIN"

- name: Copy ODIN config
  when: odin_config_file
  become: true
  copy:
    src: "{{ odin_config_file }}"
    dest: "{{ odin_git_location }}/ODIN/auth/keys.config"
